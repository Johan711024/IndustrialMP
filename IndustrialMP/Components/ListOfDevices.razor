@using IndustrialMP.Services;
@inject IManagementCentralClient managementCentralClient

<div class="col col-8">
        <div class="card mb-6 rounded-3 shadow-sm">
          <div class="card-header py-3">
            <h4 class="my-0 fw-normal">Online Devices</h4>
          </div>
          <div class="card-body">

            <AddDevice AddDevices="AddDevices"></AddDevice>

           <ul id="listOfDevices" class="list-group align-self-sm-stretch mt-4">
            @foreach(var item in ListOfDevice)
            {
              <li @onclick="async () => await Online(item)" class="list-group-item @(item.Online ? "change" : "")">
                  @item.Text
                        <button @onclick="async () => await Delete(item)" @onclick:stopPropagation="true" class="btn btn-danger">

                      X
                      
                        </button>
              </li>
            }
           </ul>

          </div>
        </div>
      </div>

@code {

    @code {



        [Parameter]
        public List<Item> ListOfDevice { get; set; } = new List<Item>();

        [Parameter]
        public EventCallback<CreateItem> AddDevices { get; set; }

        [Parameter]
        public EventCallback<string> RemoveDevice { get; set; }

        


        private async Task Online(Item item)
        {
            if (item is null)
            {
                throw new ArgumentNullException(nameof(item));
            }

            item.Online = item.Online ? false : true;

            var isCompleted = await managementCentralClient.PutAsync(item);

            if (!isCompleted)
                item.Online = item.Online ? false : true;

            //Handle Errors
        }
        


        public async Task OnRemoveDevice(Item item)
        {
            ListOfDevice.Remove(item);           
        }





        private async Task Delete(Item item)
        {
            if (item is null)
            {
                throw new ArgumentNullException(nameof(item));
            }

            var isRemoved = await managementCentralClient.RemoveAsync(item.Id);

            if (isRemoved)
            {
                ListOfDevice.Remove(item);
            }

        }


    }

}
